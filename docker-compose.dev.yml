services:
  100pfps:
    image: 100pfps-dev
    container_name: 100pfps-dev
    build: 
      dockerfile: ./Dockerfile.dev
      context: .
      args:
        UNAME: ${UNAME}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app/
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@100pfps-db-dev/${POSTGRES_DB}
      - MODE=${MODE}
    working_dir: /app/
    entrypoint: sh /app/dev.sh

  www:
    image: docker.io/nginx:alpine
    container_name: 100pfps-www-dev
    volumes: 
      - ./www/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./public/:/public/
    ports:
      - 8080:80
    depends_on:
      - 100pfps

  db:
    image: docker.io/postgres:alpine
    container_name: 100pfps-db-dev
    restart: unless-stopped
    volumes: 
      - db:/var/lib/postgresql/data:Z
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U${POSTGRES_USER}"]
      interval: 10m
      start_period: 10s
      start_interval: 3s

volumes:
  db:
    name: 100pfps-db-dev
